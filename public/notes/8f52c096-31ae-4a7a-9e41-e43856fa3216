:PROPERTIES:
:ID:       8f52c096-31ae-4a7a-9e41-e43856fa3216
:END:
#+title: 数据库

* 数据库三大范式
第一范式是最基本的范式。如果数据库表中的所有字段值都是不可分解的原子值，就说明该数据库表满足了第一范式。

数据库第二范式：关系模式必须满足第一范式，并且所有非主属性都完全依赖于主码。
注意，符合第二范式的关系模型可能还存在数据冗余、更新异常等问题。
关系模型（学号，姓名，专业编号，专业名称）中，学号->姓名，而专业编号->专业名称，不满足数据库第二范式

数据库第三范式：关系模型满足第二范式，所有非主属性对任何候选关键字都不存在传递依赖。
即每个属性都跟主键有直接关系而不是间接关系。
接着以学生表举例，对于关系模型（学号，姓名，年龄，性别，所在院校，院校地址，院校电话）
院校地址，院校电话和学号不存在直接关系，因此不满足第三范式。

* MySQL的共享锁排它锁
共享锁也称为读锁，相互不阻塞，多个客户在同一时刻可以同时读取同一个资源而不相互干扰。

排他锁也称为写锁，会阻塞其他的写锁和读锁，确保在给定时间内只有一个用户能执行写入并防止其他用户读取正在写入的同一资源。

* 如何解决数据库死锁
预先检测到死锁的循环依赖，并立即返回一个错误。

当查询的时间达到锁等待超时的设定后放弃锁请求。

* 简述乐观锁和悲观锁
** 乐观锁
对于数据冲突保持一种乐观态度，操作数据时不会对操作的数据进行加锁，
只有到数据提交的时候才通过一种机制来验证数据是否存在冲突。

** 悲观锁
对于数据冲突保持一种悲观态度，在修改数据之前把数据锁住，然后再对数据进行读写，
在它释放锁之前任何人都不能对其数据进行操作，直到前面一个人把锁释放后下一个人数据加锁才可对数据进行加锁，
然后才可以对数据进行操作，一般数据库本身锁的机制都是基于悲观锁的机制实现的。


* 事务
原子性（Atomicity）: 一个事务中的所有操作要么全部完成，要么全部不完成。

一致性（Consistency）: 事务执行前后数据库的状态保存一致。

隔离性（Isolation） 多个并发事务对数据库进行操作，事务间互不干扰。

持久性（Durability） 事务执行完毕，对数据的修改是永久的，即使系统故障也不会丢失

* 事务同时进行会出现的问题
- 丢失修改
- 脏读：当前事务可以查看到别的事务未提交的数据。
- 不可重读：在同一事务中，使用相同的查询语句，同一数据资源莫名改变了。
- 幻读：在同一事务中，使用相同的查询语句，
  莫名多出了一些之前不存在的数据，或莫名少了一些原先存在的数据。

* 事务隔离级别
读未提交： 一个事务还没提交，它做的变更就能被别的事务看到。

读提交： 一个事务提交后，它做的变更才能被别的事务看到。

可重复读： 一个事务执行过程中看到的数据总是和事务启动时看到的数据是一致的。
    在这个级别下事务未提交，做出的变更其它事务也看不到。

串行化： 对于同一行记录进行读写会分别加读写锁，当发生读写锁冲突，
    后面执行的事务需等前面执行的事务完成才能继续执行。

* SQL 基础

** SQL 语句类型 

| Name | Example                      |
|------+------------------------------|
| DDL  | CREATE DROP ALTER            |
| DQL  | SELECT                       |
| DML  | INSERT UPDATE DELETE         |
| DCL  | GRANT REVOKE COMMIT ROLLBACK |

** SQL 约束

** MySQL 连接查询

*** 外连接
LEFT JOIN
RIGHT JOIN
MySQL 不支持全外连接(FULL JOIN)

